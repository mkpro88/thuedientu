
/**
* 
* @param {string}
*
* @return {string} 
*/
function nvl(s)
{
	if ( s == null )
		return "";
	else
		return s;
}

/**
* 
* @param {bool} true；false
*/
function selectAll( choose )
{
	var allCheck = document.all.tags("input");
	for(var i=0; i<allCheck.length; i++){
		var tagBody = allCheck[i];
		if (tagBody.getAttribute("type") == "checkbox")
		{
			tagBody.checked= choose;
		}
	}
}

/**
* checkbox name
* @return {String} |name，checkbox
*/
function getCheckList()
{	
	var checkList = '';

	var allCheck = document.all.tags("input");
	for(var i=0; i<allCheck.length; i++)
	{
		var tagBody = allCheck[i];
		if (tagBody.getAttribute("type") == "checkbox")
		{
			if ( tagBody.checked )
			{
				checkList += tagBody.name  + '|';
			}
		}
	}
	
	return checkList;
}

/**
* checkbox
* @param {String}
* @return {int[]}
*/
function getSeltCheckbox(tableId) {
	tablerows = document.getElementById(tableId).rows;
	var cell,chks,chk;
	arrIndex = new Array(tablerows.length);
	
	for(var i=0; i<tablerows.length; i++) {//数组初始化
		arrIndex[i] = 0;
	}
	
	for(var j=0; j<tablerows.length; j++) {
		cell = tablerows[j].cells[0];
		chks = cell.getElementsByTagName("input");
	
		for(var k=0; k<chks.length; k++) {
			chk = chks[k];
			if(chk.checked) {
				arrIndex[j] = j;
			}
		}
	}
	return arrIndex;
}

/**
* checkbox
* @param {String}
*/
function delSeltChkBox(tableId) {
	var arrIndex = getSeltCheckbox(tableId);
	var count = 0;
	var flag = 0;
	var k = 0;
	for(var i=1; i<arrIndex.length; i++) {				
		if(arrIndex[i] != 0) {
			if(flag != 0) {
				k = i-count;
				document.getElementById(tableId).deleteRow(k);
			} else {
				k = i;
				document.getElementById(tableId).deleteRow(i);
				flag = 1;		
			}			
			count++;
		}				
	}
}
/**
*
* @param {String}
* @return {bool}
*/
function isFloat( s )
{
	var isFloat = RegExp(/^([0-9]+(\.+))[0-9]+$/);
	return ( isFloat.test(s) );
}

/**
*
* @param {String}
* @return {bool}
*/
function isDecimal( s )
{
	var isDecimal = RegExp(/^([0-9]+(\.?))?[0-9]+$/);
	return ( isDecimal.test(s) );
}

/**
*
* @param {String}
* @return {bool}
*/
function isIntChar( s )
{
 	var isIntChar = RegExp(/^[a-zA-Z0-9]+$/);
	return ( isIntChar.test(s) );
 }

/**
*
* @param {String}
* @return {bool}
*/
function isIntFigure( s )
{
 	var isIntFigure = RegExp(/^[0-9]+$/);
	return ( isIntFigure.test(s) );
 }


/**
*
*  * & % $ # @ ! ~ ^ ( )
* @param {String}
* @return {bool}
*/
function isIntCharSpecial( s )
{
	var isIntCharSpecial = RegExp(/^[a-zA-Z0-9(\_)(\-)(\*)(\&)(\%)(\$)(\#)(\@)(\!)(\~)(\^)(\()(\))]+$/);
	return ( isIntCharSpecial.test(s) );
}

/**
* 
* @param {String}
* @return {String}
*/
function encode(s)
{
	if(s == null ) 
		return s;
	if(s.length == 0) 
		return s;
	
	var ret = "";
	for(i=0;i<s.length;i++)
	{
		var c = s.substr(i,1);
		var ts = escape(c);
		if(ts.substring(0,2) == "%u") 
		{
			ret = ret + ts.replace("%u","@@");
		} else {
			ret = ret + c;
		}
	}
	return ret;
}

/**
*
* @param {String}
* @param {Integer}
* @return {bool}
*/
function validateAccount(account,length) 
{
	if( isEmpty(account) )
	{
		return false;
	}
	
	if( !isInteger(account) )
	{
		return false;
	}
	
	if( !isShorter(account,length) )
	{
		return false;
	}	
	
	return true;
}

/**
* @param {String} 0～100
* @return {bool}
*/
function getFmtRate(str) 
{
	var rate = parseInt(str);
	
	if ( rate > 100 || rate < 0 )
		return("-1");
	
	return (rate/100);
}


/**
*
* @param {String}
* @return {bool}
*/
function isEmpty(e)
{
	if( trim(e) == "" )
		return true;
	else
		return false;
}

/**
*
* @param {String}
* @return {String}
*/
function trim(param) {
	if ((vRet = param) == '') { return vRet; }
	while (true) {
		if (vRet.indexOf (' ') == 0) {
			vRet = vRet.substring(1, parseInt(vRet.length));
		} else if ((parseInt(vRet.length) != 0) && (vRet.lastIndexOf (' ') == parseInt(vRet.length) - 1)) {
			vRet = vRet.substring(0, parseInt(vRet.length) - 1);
		} else {
			return vRet;
		}
	}
}

/**
*
* @param {String}
* @param {Integer}
* @return {bool} true：false：
*/
function isLength(str,reqlength)
{
	if( str.length == reqlength )
		return true;
	else
		return false;
}

/**
*
* @param {String}
* @param {Integer}
* @return {bool} true： false：
*/
function isShorter(str,reqlength)
{
	if( str.length<reqlength )
		return true;
	else
		return false;
}

/**
*
* @param {String}
* @return {bool}
*/
function isInteger( s )
{ 
	var isInteger = RegExp(/^[0-9]+$/);
	return ( isInteger.test(s) );
}

/**
* YYYYMMDD
* @param {String}
* @return {bool}
*/
function isDate(param) {
	var pattern = /^\d+$/;
	if ( param.length != 8 ) {
		return false;
	}
	if(!pattern.test(param)) {
		return false;
	}
	sYear = param.substring( 0, 4 );
	sMonth = param.substring( 4, 6 );
	sDay = param.substring( 6, 8 );
	if ( ( eval( sMonth ) < 1 ) || ( eval( sMonth )  > 12 ) ) {
		return false;
	}
	var leapYear = ((( sYear % 4 == 0 ) && ( sYear % 100 != 0 )) || ( sYear % 400 == 0 )) ? true : false;
	var monthDay = new Array(12);
	monthDay[0] = 31;
	monthDay[1] = leapYear ? 29 : 28;
	monthDay[2] = 31;
	monthDay[3] = 30;
	monthDay[4] = 31;
	monthDay[5] = 30;
	monthDay[6] = 31;
	monthDay[7] = 31;
	monthDay[8] = 30;
	monthDay[9] = 31;
	monthDay[10] = 30;
	monthDay[11] = 31;
	if ( ( eval( sDay ) < 1 ) || ( eval( sDay )  > monthDay[eval(sMonth)-1] ) ) {
		return false;
	}
	return true;
}

/**
* @param {String}
* @return {bool}
*/
function isYearMonth(param) {
	var pattern = /^\d+$/;
	if ( param.length != 6 ) {
		return false;
	}
	if(!pattern.test(param)) {
		return false;
	}
	sYear = param.substring( 0, 4 );
	sMonth = param.substring( 4, 6 );
	if ( ( eval( sMonth ) < 1 ) || ( eval( sMonth )  > 12 ) ) {
		return false;
	}
	return true;
}

/**
* @param {String}
* @param {String}
* @param {Integer}
* @return {bool}
*/
function dateInterval(startDate,endDate,interval) {
	var date1 = new Date(eval(startDate.substring(0,4)),eval(startDate.substring(4,6))-1,eval(startDate.substring(6,8)));
	var date2 = new Date(eval(endDate.substring(0,4)),eval(endDate.substring(4,6))-1,eval(endDate.substring(6,8)));
	if ( ( date2 - date1 ) / 86400000 > eval(interval) - 1 )
		return false;
	return true;
}

/**
* @param {String}
* @return {bool}
*/
function isEmail(aEmail) {
	var bValidate = RegExp(/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/).test(aEmail);
	
	if ( bValidate )
	{
		return true;
	}
	else
		return false;
}

/**
* @param {Object} HTML
*/
function makeFocus(txtObject) {
	txtObject.focus();
	txtObject.select();
}

/**
* onblur="checkLength(this,'');"
* @param {Object} text
* @param {Integer}
*/
function checkLength(v,l){
	var s = v.value;
	var len = 0;
	
	for(i==0;i<s.length;i++)
	{
		var c = s.substr(i,1);
		var ts = escape(c);
		if(ts.substring(0,2) == "%u") 
		{
			len+=2;
		} else {
			len+=1;
		}
	}
	if(l>=len)
	{
		return;
	}
	else
	{
		var aaa=Math.floor(l/2);
		alert(""+l+aaa);
		v.value = "";
		v.focus();
	}
}

/**
*onblur="checkAreaLength(this,'');"
* @param {Object} textarea
* @param {Integer}
*/
function checkAreaLength(v,l){
	var s= v.value;
	var temlen=0;
	var len = 0;
	
	for(i==0;i<s.length;i++)
	{
		var c = s.substr(i,1);
		var ts = escape(c);
	
		if(ts.substring(0,2) == "%u")
		{
			len+=2;
			len+=temlen;
			temlen=0;
		}
		else if(ts.substring(0,3) == "%0D"){
			temlen+=1;
		}
		else if(ts.substring(0,3) == "%0A"){
			temlen+=1;
		}
		else if(ts.substring(0,3) == "%20"){
			temlen+=1;
		}
		else{
			len+=1;
			len+=temlen;
			temlen=0;
		}
	}
	
	if(len>l){
		var aaa=Math.floor(l/2);
		alert(""+l+aaa);  	
		v.value = "";
		v.focus();
		return false;
	}
	return true;
}

/**
* @param {String}
* @param {String} DIV
* @param {Integer}
* @param {Integer}
*/
function commonprint(title,divId,w,h){
	var sarg=new Array();
	var sdata=document.all.item(divId);
	sarg[0]=title;
	sarg[1]=sdata.outerHTML;
	window.showModalDialog("print.jsp",sarg,"dialogWidth:"+w+"px;dialogHeight:"+h+"px;center:yes;help:no;status:no;resizable:yes");
	return;
}

/**
* 1234
* @param {String}
* @param {String}
* @param {String}
*/
function convertToMoney(formName,txtmoney,hidmoney){
    var tonumber;
    var re = /,/g;
    var txt_money = eval("document."+formName+"."+txtmoney);
    var hid_money = eval("document."+formName+"."+hidmoney);
    if (txt_money.value != ""){
    	var temp = trim(txt_money.value);
    	if (temp == ""){
    		alert("请输入正确的金额!");
    		txt_money.value="";
				hid_money.value="";
				txt_money.focus();
    		return;
    	}
    }
    tonumber = txt_money.value.replace(re,"");

    txt_money.value = "";
    hid_money.value = "";
   if (tonumber !="" && tonumber!=null){
   	rep = / /g;
		var amt = tonumber.replace(rep,"");
		
		for(var j = 0; j < amt.length; j++){
			if(isNaN(parseInt(amt.charAt(j),10)) && amt.charAt(j)!="," && amt.charAt(j)!=".") {
				
				txt_money.value="";
				hid_money.value="";
				txt_money.focus();
				return;
			}
		}
		if(amt.indexOf(".")!=amt.lastIndexOf(".")){
			alert("");
			txt_money.focus();
			return;
		}
	
		re = /,/g;
		var amt1 = amt.replace(re,"");

		var amt2=parseFloat(amt1);		
		if(amt2<=0){
			alert("");
			txt_money.focus();
			return;
		}else{
			if(amt1.indexOf(".")!=-1){				
				var str = amt1.substr(amt1.indexOf(".")+1);				
				if(str.length>2){
					alert("");
					txt_money.focus();
					return;
				}else if(str.length==1){
					amt1=amt1 + "0";
				}else if(str.length<1){
					amt1=amt1 + "00";
				}
			}else{
				amt1=amt1 + ".00";
			}
			if(amt1.charAt(0)=='0' && amt1.indexOf(".")!=1){
			alert("");
			txt_money.focus();
			return;
			}
			hid_money.value=amt1;
			var temp=amt1.substring(0,amt1.indexOf("."));
			if (temp.length > 10){
			    alert("");
			    txt_money.focus();
			    return;
			}
			txt_money.value=comma(temp) + amt1.substring(amt1.indexOf("."));
			return;							
		}
    }
}

/**
* @param {String}
* @param {String}
* @param {String}
*/
function convertToMoney2(formName,txtmoney,hidmoney){
    var tonumber;
    var re = /,/g;
    var txt_money = eval("document."+formName+"."+txtmoney+";");
    var hid_money = eval("document."+formName+"."+hidmoney+";");
    tonumber = txt_money.value.replace(re,"");

    txt_money.value = "";
    if (tonumber !="" && tonumber!=null){
   	rep = / /g;
		var amt = tonumber.replace(rep,"");
		
		for(var j = 0; j < amt.length; j++){
			if(isNaN(parseInt(amt.charAt(j),10)) && amt.charAt(j)!="," && amt.charAt(j)!=".") {
				alert("");
				txt_money.value="";
				txt_money.focus();
				return;
			}
		}
		if(amt.indexOf(".")!=amt.lastIndexOf(".")){
			alert("");
			txt_money.focus();
			return;
		}
	
		re = /,/g;
		var amt1 = amt.replace(re,"");

		var amt2=parseFloat(amt1);		
		if(amt2<0){
			alert("");
			txt_money.focus();
			return;
		}else{
			if(amt1.indexOf(".")!=-1){				
				var str = amt1.substr(amt1.indexOf(".")+1);				
				if(str.length>2){
					alert("");
					txt_money.focus();
					return;
				}else if(str.length==1){
					amt1=amt1 + "0";
				}else if(str.length<1){
					amt1=amt1 + "00";
				}
			}else{
				amt1=amt1 + ".00";
			}
			if(amt1.charAt(0)=='0' && amt1.indexOf(".")!=1){
			alert("");
			txt_money.focus();
			return;
			}
			hid_money.value=amt1.substring(0,amt1.indexOf(".")) + amt1.substr(amt1.indexOf(".")+1);
			var temp=amt1.substring(0,amt1.indexOf("."));
			if (hid_money.value.length > 18){
			    alert("");
			    txt_money.focus();
			    return;
			}
			txt_money.value=comma(temp) + amt1.substring(amt1.indexOf("."));
			return;							
		}
    }
}

/**
* @param {Integer}
* @return {String}
*/
function comma(number) {
	number = '' + number;
	if (number.length > 3) {
		var mod = number.length % 3;
		var output = (mod > 0 ? (number.substring(0,mod)) : '');
		for (i==0 ; i < Math.floor(number.length / 3); i++) {
			if ((mod == 0) && (i == 0))
				output += number.substring(mod+ 3 * i, mod + 3 * i + 3);
			else
				output += ',' + number.substring(mod + 3 * i, mod + 3 * i + 3);
		}
		return (output);
	}
	else return number;
}


/**
* @param {String}
* @param {String}
*/
function exportexcel(formName,tableName){
  	var oXL = new ActiveXObject("Excel.Application");
  	oXL.Visible = true;
  	var oWB = oXL.Workbooks.Add();
  	var oSheet = oWB.ActiveSheet;
  
  	var div1=document.all.item(formName);
  	var table1=div1.all.item(tableName);
  	//var table=new Array();

  	var retArr = getTableRowsCols(table1);
  	var rlen=retArr[0];
  	var clen=retArr[1];

  	var flagTable=new Array(rlen);
  	for(var i=0;i<rlen;i++){
  		flagTable[i]=new Array(clen);
  		for(var j=0;j<clen;j++){
  			flagTable[i][j]=0;
  		}
  	}

  	var rowBegin=1, colBegin=1;
  	var c1=oSheet.Cells(rowBegin,colBegin);
  	var c2=oSheet.Cells(rlen+rowBegin-1,clen+colBegin-1);
  	oSheet.Range(c1,c2).VerticalAlignment = -4108;
  	oSheet.Range(c1,c2).HorizontalAlignment =  -4108;
  	
  	exportTable(oSheet, flagTable, table1, rowBegin, colBegin);    	
	      	
   	oSheet.Range(oSheet.Cells(rowBegin,colBegin),oSheet.Cells(rlen+rowBegin-1,clen+colBegin-1)).EntireColumn.AutoFit();
  	oXL.UserControl = true;
  	oXL.Quit();
}

/**
* exportexcel
* @param {Object}
* @param {Array}
*/
function getTableRowsCols(objTable)
{
	var rowCnt=0, colCnt=0;
	for (var i=0; i<objTable.rows.length; i++) {
		var row = objTable.rows[i];
		var rowRows=1, rowCols=0;
		for (var j=0; j<row.cells.length; j++) {
			var cell = row.cells[j];
			if (cell.firstChild !=null && cell.firstChild.tagName == "TABLE") {
				var inRetArr = getTableRowsCols(cell.firstChild);
				rowCols +=inRetArr [1];
				rowRows = rowRows<inRetArr[0] ? inRetArr[0] : rowRows;
			} else {
				rowCols += parseInt(cell.colSpan);
				rowRows = rowRows<parseInt(cell.rowSpan) ? parseInt(cell.rowSpan) : rowRows;
			}
		}
		colCnt = colCnt<rowCols ? rowCols : colCnt;
		rowCnt += rowRows;
	}
	var retArr = new Array();
	retArr[0] = rowCnt;
	retArr[1] = colCnt;
	
	return retArr;
}

/**
* exportexcel
*/
function exportTable(oSheet, flagTable, objTable, rowBegin, colBegin){
	var flagRow=0, flagCol=0;
	for(var i=0; i<objTable.rows.length; i++) {
		var row = objTable.rows[i];
		flagCol = 0;
		var subTableRows = 1;
		var cs=0;
		for (var j=0; j<row.cells.length; j++) {
			
			while (flagTable[rowBegin-1+flagRow][colBegin-1+flagCol]==1) {
				flagCol++;
			}
			var cell=row.cells[j];
			if (cell.firstChild !=null && cell.firstChild.tagName == "TABLE") {
				var retArrRows = getTableRowsCols(cell.firstChild)[0];
				subTableRows = subTableRows<retArrRows ? retArrRows : subTableRows;
				exportTable(oSheet, flagTable, cell.firstChild, rowBegin+flagRow, colBegin+flagCol);
			} else {
				
				oSheet.Cells(rowBegin+flagRow, colBegin+flagCol).Font.Bold=1;
	               	 				
				var rs=parseInt(cell.rowSpan);
				cs=parseInt(cell.colSpan);
           	 	oSheet.Cells(rowBegin+flagRow, colBegin+flagCol).NumberFormatLocal="@";
           	 	oSheet.Cells(rowBegin+flagRow, colBegin+flagCol).Value = cell.innerText;
           	 	oSheet.Range(oSheet.Cells(rowBegin+flagRow, colBegin+flagCol),oSheet.Cells(rowBegin+flagRow+rs-1,colBegin+flagCol+cs-1)).MergeCells = 1;  
				
				for(var k=0; k<rs; k++) {
					for(var l=0; l<cs; l++) {
						flagTable[rowBegin-1+flagRow+k][colBegin-1+flagCol+l]=1;
					}
				}
			}
				
			flagCol =flagCol + cs - 1;			              		
		}
		flagRow += subTableRows;
	}	
}


/**
* @param {String}
* @param {String}
* @param {String}
* @param {String}
*/
function shousuo(imgleft,imgright,yqti,slide) {
	var yq = document.getElementById(yqti);
	var sl = document.getElementById(slide);
	if(yq.style.display=='none')
	{
		yq.style.display='inline';
		sl.alt='';
		sl.src=imgleft;
	}
	else
	{
		yq.style.display='none';
		sl.alt='';
		sl.src=imgright;
	}
}

/**
* @param {Integer}
* @return {String}   	
*/
function uncomma(number){
	
	var pos = number.indexOf(",");
	while(pos!=-1){
		number = number.substring(0,pos)+number.substring(pos+1,number.length);
		pos = number.indexOf(",");
	}
	
	pos = number.indexOf(".");
	while(pos!=-1){
		number = number.substring(0,pos)+number.substring(pos+1,number.length);
		pos = number.indexOf(".");
	}
	
	var pos = number.indexOf("0");
	while(pos==0){
		number = number.substring(1,number.length);
		pos = number.indexOf("0");
	}
	return number;
}
/**
* @param {String}
* @param {String}
*/
function hinderr(errname,name)
{
	document.getElementById(errname).style.display='';
	document.getElementById(name).style.display='none';
}

/**
* @param {String} url
* @param {String}
* @param {String}
*/
function openWindow(url,name,property)
{
	var printtop=(screen.height-600)/2;
	var printleft=(screen.width-500)/2;
	var theproperty;
	
	if ( property == null )
		theproperty= 'width=600,height=400,center=yes,help=no,status=no,scrollbars=yes,resizable=yes,left='+printleft+',top="'+printtop+',screenx='+printleft+',screeny='+printleft;	
	else
		theproperty = property;
	
	window.open(url,name,theproperty);
}
/**
* @param {String}
* @param {String}
* @param {String}
*/
	function stanDialog(url,width,height){
	    var par="help:no;scroll:yes;status:no;"+"dialogWidth:"+width+"px;dialogHeight:"+height+"px;";
	    window.showModalDialog(url,'',par);
	}
/**
* @param {bool}
* @param {String}
* @param {String}
* @param {String}
* @param {String}
* @param {String}
*/
function checkPassword(errName,noteName,passValue,_tranForm,_isSecure)
{
		var isSecure = _isSecure;
		if(isSecure == true){
			var safeInput=document.safeInput;
			var safeCommit=document.safeCommit;
			if(safeInput.isValid())
			{
				hinderr(errName,noteName);
				safeInput.clear();
				return false; 
			}
			if(safeInput.allType()!="10000")
			{
				hinderr(errName,noteName);
				safeInput.clear();
				return false;
			}

			safeInput.commit("safeCommit");
			safeCommit.submit(tranForm);
		}
		else{								
				var tranForm = eval("document."+_tranForm);
				if(!isInteger(passValue) || isEmpty(passValue) || passValue.length < 6){
					hinderr(errName,noteName);
					return false;
				}
			tranForm.submit();

		}
		return true;

}
//firefox
function isFirefox(){

       if(window.navigator.userAgent.indexOf("Firefox")>=1)

              return true;

       else

             return false;

}
